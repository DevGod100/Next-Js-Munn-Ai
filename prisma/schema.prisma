// import {ListOfDevLang} from '../lib/data-info/multi-choice.ts'

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId  String // discordId
  // providerAccountId  String   @map(name: "discordId") // Map the providerAccountId to discordId
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], name: "userId")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], name: "userId")
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?  // needed for planetScale
  image            String?

  discordId        String?  
  uploadeddiscordid String?  
  // discordId        String? @map(name: "providerAccountId") // Map the discordId field to providerAccountId 
  accounts         Account[]
  sessions         Session[]

  @@index([discordId], name: "discordId")
}
